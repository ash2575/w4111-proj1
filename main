CREATE TABLE APP_USER (
user_ID		VARCHAR(15),
name			VARCHAR(30) NOT NULL,
email			VARCHAR(30) NOT NULL UNIQUE,
phone_number	NUMERIC(12, 0) NOT NULL,

PRIMARY KEY (user_ID)
);
 
CREATE TABLE FOLDER
(folder_ID		VARCHAR(5),
name			VARCHAR(20) NOT NULL,
PRIMARY KEY (folder_ID));
 
	CREATE TABLE  OBJECT
(object_ID		VARCHAR(5),
name			VARCHAR(25) NOT NULL,
timestamp		TIMESTAMP NOT NULL,
PRIMARY KEY (object_ID));
 
CREATE TABLE TASK
(date			TIMESTAMP NOT NULL,
time_remaining	NUMERIC(3, 0) NOT NULL CHECK (time_remaining >= 0),
percent_complete	NUMERIC(3,2) NOT NULL CHECK (percent_complete >= 0),
object_ID		VARCHAR(5),
PRIMARY KEY (object_ID),
FOREIGN KEY (object_ID) REFERENCES OBJECT);
 
CREATE TABLE SUBTASK
(subtask_ID		VARCHAR(5),
name			VARCHAR(25) NOT NULL,
subtask_number	NUMERIC(2, 0) NOT NULL CHECK (subtask_number > 0),
PRIMARY KEY (subtask_ID));
 
CREATE TABLE GOAL
(target_date		TIMESTAMP NOT NULL,
object_ID		VARCHAR(5),
FOREIGN KEY (object_ID) REFERENCES object);
 
CREATE TABLE EVENT
(date			TIMESTAMP NOT NULL,
location		VARCHAR(30),
object_ID		VARCHAR(5),
FOREIGN KEY (object_ID) REFERENCES object);
 
CREATE TABLE OWNS
(user_ID 		VARCHAR(10),
folder_ID		VARCHAR(5),
PRIMARY KEY (user_ID, folder_ID),
FOREIGN KEY (user_ID) REFERENCES app_user,
FOREIGN KEY (folder_ID) REFERENCES folder);
 
CREATE TABLE HAS
(user_ID 		varchar(10),
object_ID		varchar(5),
PRIMARY KEY (user_ID, object_ID),
FOREIGN KEY (user_ID) REFERENCES app_user,
FOREIGN KEY (object_ID) REFERENCES object);
 
CREATE TABLE CONTAINS
(object_ID 		VARCHAR(5),
folder_ID		VARCHAR(5)
PRIMARY KEY (object_ID, folder_ID),
FOREIGN KEY (object_ID) REFERENCES object,
FOREIGN KEY (folder_ID) REFERENCES folder);
 
CREATE TABLE CONSISTS_OF
( object_ID 		VARCHAR(5),
subtask_ID		VARCHAR(5),
PRIMARY KEY (object_ID, subtask_ID),
FOREIGN KEY (object_ID) REFERENCES object,
FOREIGN KEY (subtask_ID) REFERENCES subtask);

# below is the data inserted into the database
INSERT INTO app_user VALUES
(‘0000000001’, ‘Ashly’, ‘amedina07@gmail.com’, 3237237702);
INSERT INTO app_user VALUES
(‘0000000002’, ‘Alysha’, ‘aacosta@gmail.com’, 3109782344);
INSERT INTO user VALUES
(‘0000000003’, ‘Sumra’, ‘ss1116@gmail.com’, 7865649871);
INSERT INTO app_user VALUES
(‘0000000004’, ‘Kayla”, ‘amos.k@gmail.com’, 8192656134);
INSERT INTO app_user VALUES
(‘0000000005’, ‘Tigidankay’, ‘tk12@gmail.com’, 4261099256);

INSERT INTO folder VALUES
(‘00001’, ‘School’);
INSERT INTO folder VALUES
(‘00002’, ‘Work’);
INSERT INTO folder VALUES
(‘00003’, ‘Other’);

INSERT INTO object VALUES
(‘1’, ‘Meeting with Advisor’, 3032020);
INSERT INTO event VALUES
(‘2020-03-09 15:00:00’, ‘1’);

INSERT INTO object VALUES
(‘2’, ‘COMW4111 Midterm’, 3032020);
INSERT INTO event VALUES
(‘2020-03-11 13:10:00’, ‘2’);

INSERT INTO object VALUES
(‘3’, ‘COMW4111 Lecture’, 1092020);
INSERT INTO event VALUES
(‘2020-03-09 13:10:00’, ‘3’);

INSERT INTO object VALUES
(‘4’, ‘Project Part 1’, 1222020);
INSERT INTO task VALUES
(‘2020-02-19 17:00:00’, 0, 0.00, ‘4’);

INSERT INTO object VALUES
(‘5’, ‘Project Part 2’, 2182020);
INSERT INTO task VALUES
(‘2020-03-09 13:00:00’, 0, 0.00, ‘5’);

INSERT INTO object VALUES
(‘6’, ‘COMSW411 HW#2’, 2192020);
INSERT INTO task VALUES
(‘2020-03-04 23:59:59’, 0, 0.00, ‘6’);

INSERT INTO object VALUES
(‘7’, ‘Save up $500’, 1012020);
INSERT INTO goal VALUES
(‘2020-06-01’, ‘7’);

INSERT INTO object VALUES
(‘8’, ‘Gain 10lbs’, 1012020);
INSERT INTO goal VALUES
(‘2020-12-31’, ‘8’);

INSERT INTO object VALUES
(‘9’, ‘Obtain 4.0 GPA’, 1012020);
INSERT INTO goal VALUES
(‘2020-05-16’, ‘9’);

#prints the names of all goals, events, and tasks coming up after a certain date
SELECT object.object_id, object.name
FROM object
WHERE object.timestamp >= timestamp('1999-01-01 00:00:00');

#prints the names of all folders with more than one object in it
SELECT folder.name, count(object.object_id)
FROM folder 
JOIN contains
ON contains.folder_id = folder.folder_id
GROUP BY folder.name
HAVING COUNT(object.object_id) > 1;

#prints the name and number of subtasks of all tasks that have more than one subtask
SELECT object.name, COUNT(subtask.subtask_id)
FROM object JOIN task
ON object.object_id = task.object_id
JOIN consists_of
ON consists_of.object_id = object.object_id
GROUP BY object.name
HAVING COUNT(subtask.subtask_id) >= 2;
